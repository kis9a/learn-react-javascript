{"version":3,"sources":["App.js","reportWebVitals.js","components/StateCounter.jsx","components/EffectCounter.jsx","components/ContextCounter.jsx","components/ReducerCounter.jsx","index.js"],"names":["App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","Math","floor","random","Counter","props","toggle","setState","open","state","count","onClick","this","React","Component","EffectCounterClass","document","title","EffectCounterFunction","useState","setCount","useEffect","prev","NumberContext","createContext","ContextCounter","useContext","class","Provider","value","Display","Consumer","ReactDOM","render","querySelector","reducerFunc","countState","action","ReducerCounter","useReducer","dispatch","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.25ed0d75.chunk.js","sourcesContent":["import './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>React hooks</h1>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\n\n// initialize random number 1~10\nconst initialState = Math.floor(Math.random() * 10) + 1;\n\nclass Counter extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: initialState,\n      open: true,\n    };\n  }\n  toggle = () => {\n    this.setState({ open: !this.state.open });\n  };\n\n  render() {\n    return (\n      <>\n        <div className=\"m1 component-state-counter\">\n          <h2 className=\"mk component-name\">State Counter</h2>\n          <button onClick={this.toggle}>\n            {this.state.open ? \"Close\" : \"Open\"}\n          </button>\n          <div className={this.state.open ? \"isOpen\" : \"isClose\"}>\n            <p className=\"p1\">Current number is {this.state.count}</p>\n            <button\n              onClick={() => this.setState({ count: this.state.count + 1 })}\n            >\n              {\" \"}\n              + 1{\" \"}\n            </button>\n            <button\n              onClick={() => this.setState({ count: this.state.count - 1 })}\n            >\n              {\" \"}\n              - 1{\" \"}\n            </button>\n            <button onClick={() => this.setState({ count: 0 })}>0</button>\n            <button onClick={() => this.setState({ count: initialState })}>\n              Reset\n            </button>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Counter;\n","import React, { useState, useEffect } from \"react\";\n\nexport class EffectCounterClass extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 0,\n    };\n  }\n\n  componentDidMount() {\n    document.title = `${this.state.count} times clicked`;\n  }\n\n  componentDidUpdate() {\n    document.title = `${this.state.count} times clicked`;\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"m1 component-effect-button\">\n          <h2 className=\"mk component-name\">Effect Counter</h2>\n          <p className=\"p1\">{`${this.state.count} times clicked`}</p>\n          <button\n            onClick={() => this.setState({ count: this.state.count + 1 })}\n          >\n            Button\n          </button>\n          <button onClick={() => this.setState({ count: 0 })}>Reset</button>\n        </div>\n      </>\n    );\n  }\n}\n\nexport const EffectCounterFunction = () => {\n  const [count, setCount] = useState(0);\n  useEffect(() => {\n    document.title = `${count} times clicked`;\n  });\n\n  return (\n    <>\n      <div className=\"m1 component-effect-button\">\n        <h2 className=\"mk component-name\">Effect Counter</h2>\n        <p className=\"p1\">{`${count} times clicked`}</p>\n        <button onClick={() => setCount((prev) => prev + 1)}>Button</button>\n        <button onClick={() => setCount(0)}>Reset</button>\n      </div>\n    </>\n  );\n};\n","import React, { useContext, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nconst NumberContext = React.createContext();\n\nexport default function ContextCounter() {\n  const [count, setCount] = useState(0);\n  useContext(NumberContext);\n\n  return (\n    <div class=\"m1 component-use-context\">\n      <h2 className=\"mk component-name\">Context Button</h2>\n      <NumberContext.Provider value={count}>\n        <div>\n          <Display />\n        </div>\n      </NumberContext.Provider>\n      <button onClick={() => setCount((prev) => prev + 1)}>Button</button>\n      <button onClick={() => setCount(0)}>Reset</button>\n    </div>\n  );\n}\n\nfunction Display() {\n  // Use the Consumer to grab the value from context\n  // Notice this component didn't get any props!\n  return (\n    <NumberContext.Consumer>\n      {(value) => <p className=\"p1\">{value} times clicked.</p>}\n    </NumberContext.Consumer>\n  );\n}\n\nReactDOM.render(<ContextCounter />, document.querySelector(\"#root\"));\n","//useReducerをimport\nimport React, { useReducer } from \"react\";\n\n//counterの初期値を0に設定\nconst initialState = 0;\n//reducer関数を作成\n//countStateとactionを渡して、新しいcountStateを返すように実装する\nconst reducerFunc = (countState, action) => {\n  //reducer関数にincrement、increment、reset処理を書く\n  //どの処理を渡すかはactionを渡すことによって判断する\n  switch (action) {\n    case \"increment\":\n      return countState + 1;\n    case \"decrement\":\n      return countState - 1;\n    case \"reset\":\n      return initialState;\n    default:\n      return countState;\n  }\n};\nconst ReducerCounter = () => {\n  //作成したreducerFunc関数とcountStateをuseReducerに渡す\n  //useReducerはcountStateとdispatchをペアで返すので、それぞれを分割代入\n  const [count, dispatch] = useReducer(reducerFunc, initialState);\n  //カウント数とそれぞれのactioを実行する<button/>を設置する\n  return (\n    <>\n      <div className=\"m1 component-state-counter\">\n        <h2 className=\"mk component-name\">Reducer Counter</h2>\n        <p className=\"p1\">{count} times clicked</p>\n        <button onClick={() => dispatch(\"increment\")}>+1</button>\n        <button onClick={() => dispatch(\"decrement\")}>-1</button>\n        <button onClick={() => dispatch(\"reset\")}>Reset</button>\n      </div>\n    </>\n  );\n};\n\nexport default ReducerCounter;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport Counter from \"./components/StateCounter\";\nimport {\n  EffectCounterClass,\n  EffectCounterFunction,\n} from \"./components/EffectCounter\";\nimport ContextCounter from \"./components/ContextCounter\";\nimport ReducerCounter from \"./components/ReducerCounter\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    <div className=\"flex\">\n      <Counter />\n    </div>\n    <hr />\n    <div className=\"flex\">\n      <EffectCounterClass />\n      <EffectCounterFunction />\n    </div>\n    <hr />\n    <ContextCounter />\n    <hr />\n    <ReducerCounter />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}